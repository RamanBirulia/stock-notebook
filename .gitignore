# Rust/Cargo
target/
Cargo.lock
**/*.rs.bk
*.pdb

# Node.js/npm/yarn/bun
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*
*.tgz
*.tar.gz
bun.lockb

# Build outputs
build/
dist/
out/

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# SQLx prepared queries (uncomment to ignore)
# .sqlx/
# Note: Include .sqlx in version control for offline builds
# Exclude .sqlx if you prefer online compilation only

# Database files
*.db
*.sqlite
*.sqlite3

# Logs
logs/
*.log

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# IDEs and editors
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
.cache/

# Docker
.dockerignore

# Rust specific
**/*.rs.bk
*.pdb

# Frontend specific
.next/
.nuxt/
.vuepress/dist
.serverless/
.fusebox/
.dynamodb/

# TypeScript
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.parcel-cache

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# Local development
.local/
