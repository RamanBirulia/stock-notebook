version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: stock-notebook-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-stock_notebook}
      POSTGRES_USER: ${POSTGRES_USER:-stock_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - stock-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-stock_user} -d ${POSTGRES_DB:-stock_notebook}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: stock-notebook-backend-prod
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-stock_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-stock_notebook}
      JWT_SECRET: ${JWT_SECRET}
      RUST_LOG: ${RUST_LOG:-warn}
      PORT: 8080
      FRONTEND_URL: ${FRONTEND_URL:-https://yourdomain.com}
      ENVIRONMENT: production
      ENABLE_API_REQUEST_LOGGING: ${ENABLE_API_REQUEST_LOGGING:-false}
      ENABLE_API_RESPONSE_LOGGING: ${ENABLE_API_RESPONSE_LOGGING:-false}
      SQLX_MAX_CONNECTIONS: ${SQLX_MAX_CONNECTIONS:-20}
      SQLX_MIN_CONNECTIONS: ${SQLX_MIN_CONNECTIONS:-5}
      SQLX_ACQUIRE_TIMEOUT: ${SQLX_ACQUIRE_TIMEOUT:-30}
      SQLX_IDLE_TIMEOUT: ${SQLX_IDLE_TIMEOUT:-600}
      SQLX_MAX_LIFETIME: ${SQLX_MAX_LIFETIME:-1800}
    networks:
      - stock-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: stock-notebook-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    networks:
      - stock-network
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
  nginx_cache:
    driver: local

networks:
  stock-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
