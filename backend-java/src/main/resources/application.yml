spring:
  application:
    name: stock-notebook-backend

  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:stock_notebook}
    username: ${DATABASE_USER:stock_user}
    password: ${DATABASE_PASSWORD:stock_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

  cache:
    caffeine:
      spec: maximumSize=10000,expireAfterWrite=24h

  security:
    user:
      name: admin
      password: admin

server:
  port: ${PORT:8080}
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

logging:
  level:
    com.stocknotebook: ${LOG_LEVEL:INFO}
    org.springframework.web: ${WEB_LOG_LEVEL:WARN}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${SQL_BIND_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,cache
  endpoint:
    health:
      show-details: when-authorized

app:
  jwt:
    secret: ${JWT_SECRET:mySecretKey}
    expiration: ${JWT_EXPIRATION:86400000} # 24 hours

  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

  yahoo-finance:
    base-url: https://query1.finance.yahoo.com
    timeout: 30000
    retry-attempts: 3
    retry-delay: 1000

  cache:
    default-ttl: 3600 # 1 hour
    price-cache-ttl: 300 # 5 minutes
    chart-cache-ttl: 1800 # 30 minutes
    symbol-cache-ttl: 86400 # 24 hours

  scheduler:
    stock-data-update:
      cron: "0 0 9,16 * * MON-FRI" # 9 AM and 4 PM on weekdays
      enabled: ${SCHEDULER_ENABLED:true}
    cache-cleanup:
      cron: "0 0 2 * * *" # 2 AM daily
      enabled: ${CACHE_CLEANUP_ENABLED:true}

---
spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: password

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true

  flyway:
    enabled: false

app:
  jwt:
    secret: testSecret
    expiration: 3600000

---
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: jdbc:postgresql://postgres:5432/stock_notebook
    username: stock_user
    password: stock_password

logging:
  level:
    root: INFO
    com.stocknotebook: INFO
